{"remainingRequest":"C:\\Users\\32179\\Desktop\\will-fire\\willFire\\vue\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\32179\\Desktop\\will-fire\\willFire\\vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\32179\\Desktop\\will-fire\\willFire\\vue\\src\\utils\\common.js","dependencies":[{"path":"C:\\Users\\32179\\Desktop\\will-fire\\willFire\\vue\\src\\utils\\common.js","mtime":1720174139000},{"path":"C:\\Users\\32179\\Desktop\\will-fire\\willFire\\vue\\babel.config.js","mtime":1720174139000},{"path":"C:\\Users\\32179\\Desktop\\will-fire\\willFire\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1723800259159},{"path":"C:\\Users\\32179\\Desktop\\will-fire\\willFire\\vue\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1723800259150},{"path":"C:\\Users\\32179\\Desktop\\will-fire\\willFire\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1723800259743}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}