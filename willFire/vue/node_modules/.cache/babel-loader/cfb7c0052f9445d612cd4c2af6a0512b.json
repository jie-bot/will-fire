{"remainingRequest":"D:\\code\\willFire\\vue\\node_modules\\thread-loader\\dist\\cjs.js!D:\\code\\willFire\\vue\\node_modules\\babel-loader\\lib\\index.js!D:\\code\\willFire\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\code\\willFire\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\willFire\\vue\\src\\components\\admin\\postEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\willFire\\vue\\src\\components\\admin\\postEdit.vue","mtime":1723964853964},{"path":"D:\\code\\willFire\\vue\\babel.config.js","mtime":1720174139000},{"path":"D:\\code\\willFire\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1723800259159},{"path":"D:\\code\\willFire\\vue\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1723800259150},{"path":"D:\\code\\willFire\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1723800259743},{"path":"D:\\code\\willFire\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1723800259159},{"path":"D:\\code\\willFire\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1723800259896}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZS5qcyI7CgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwp2YXIgdXBsb2FkUGljdHVyZSA9IGZ1bmN0aW9uIHVwbG9hZFBpY3R1cmUoKSB7CiAgcmV0dXJuIGltcG9ydCgiLi4vY29tbW9uL3VwbG9hZFBpY3R1cmUiKTsKfTsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICB1cGxvYWRQaWN0dXJlOiB1cGxvYWRQaWN0dXJlCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaWQ6IHRoaXMuJHJvdXRlLnF1ZXJ5LmlkLAogICAgICBhcnRpY2xlOiB7CiAgICAgICAgYXJ0aWNsZVRpdGxlOiAiIiwKICAgICAgICBhcnRpY2xlQ29udGVudDogIiIsCiAgICAgICAgY29tbWVudFN0YXR1czogdHJ1ZSwKICAgICAgICByZWNvbW1lbmRTdGF0dXM6IGZhbHNlLAogICAgICAgIHZpZXdTdGF0dXM6IHRydWUsCiAgICAgICAgcGFzc3dvcmQ6ICIiLAogICAgICAgIHRpcHM6ICIiLAogICAgICAgIGFydGljbGVDb3ZlcjogIiIsCiAgICAgICAgdmlkZW9Vcmw6ICIiLAogICAgICAgIHNvcnRJZDogbnVsbCwKICAgICAgICBsYWJlbElkOiBudWxsCiAgICAgIH0sCiAgICAgIHNvcnRzOiBbXSwKICAgICAgbGFiZWxzOiBbXSwKICAgICAgbGFiZWxzVGVtcDogW10sCiAgICAgIHJ1bGVzOiB7CiAgICAgICAgYXJ0aWNsZVRpdGxlOiBbewogICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAn6K+36L6T5YWl5qCH6aKYJywKICAgICAgICAgIHRyaWdnZXI6ICdjaGFuZ2UnCiAgICAgICAgfV0sCiAgICAgICAgYXJ0aWNsZUNvbnRlbnQ6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICfor7fovpPlhaXlhoXlrrknLAogICAgICAgICAgdHJpZ2dlcjogJ2NoYW5nZScKICAgICAgICB9XSwKICAgICAgICBjb21tZW50U3RhdHVzOiBbewogICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAn5piv5ZCm5ZCv55So6K+E6K66JywKICAgICAgICAgIHRyaWdnZXI6ICdjaGFuZ2UnCiAgICAgICAgfV0sCiAgICAgICAgcmVjb21tZW5kU3RhdHVzOiBbewogICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAn5piv5ZCm5o6o6I2QJywKICAgICAgICAgIHRyaWdnZXI6ICdjaGFuZ2UnCiAgICAgICAgfV0sCiAgICAgICAgdmlld1N0YXR1czogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogJ+aYr+WQpuWPr+ingScsCiAgICAgICAgICB0cmlnZ2VyOiAnY2hhbmdlJwogICAgICAgIH1dLAogICAgICAgIGFydGljbGVDb3ZlcjogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogJ+WwgemdoicsCiAgICAgICAgICB0cmlnZ2VyOiAnY2hhbmdlJwogICAgICAgIH1dLAogICAgICAgIHNvcnRJZDogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogJ+WIhuexuycsCiAgICAgICAgICB0cmlnZ2VyOiAnY2hhbmdlJwogICAgICAgIH1dLAogICAgICAgIGxhYmVsSWQ6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICfmoIfnrb4nLAogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgICAgfV0KICAgICAgfQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7fSwKICB3YXRjaDogewogICAgJ2FydGljbGUuc29ydElkJzogZnVuY3Rpb24gYXJ0aWNsZVNvcnRJZChuZXdWYWwsIG9sZFZhbCkgewogICAgICBpZiAob2xkVmFsICE9PSBudWxsKSB7CiAgICAgICAgdGhpcy5hcnRpY2xlLmxhYmVsSWQgPSBudWxsOwogICAgICB9CgogICAgICBpZiAoIXRoaXMuJGNvbW1vbi5pc0VtcHR5KG5ld1ZhbCkgJiYgIXRoaXMuJGNvbW1vbi5pc0VtcHR5KHRoaXMubGFiZWxzKSkgewogICAgICAgIHRoaXMubGFiZWxzVGVtcCA9IHRoaXMubGFiZWxzLmZpbHRlcihmdW5jdGlvbiAobCkgewogICAgICAgICAgcmV0dXJuIGwuc29ydElkID09PSBuZXdWYWw7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldFNvcnRBbmRMYWJlbCgpOwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHt9LAogIG1ldGhvZHM6IHsKICAgIGltZ0FkZDogZnVuY3Rpb24gaW1nQWRkKHBvcywgZmlsZSkgewogICAgICB2YXIgc3VmZml4ID0gIiI7CgogICAgICBpZiAoZmlsZS5uYW1lLmxhc3RJbmRleE9mKCcuJykgIT09IC0xKSB7CiAgICAgICAgc3VmZml4ID0gZmlsZS5uYW1lLnN1YnN0cmluZyhmaWxlLm5hbWUubGFzdEluZGV4T2YoJy4nKSk7CiAgICAgIH0KCiAgICAgIHZhciBrZXkgPSAiYXJ0aWNsZVBpY3R1cmUiICsgIi8iICsgdGhpcy4kc3RvcmUuc3RhdGUuY3VycmVudEFkbWluLnVzZXJuYW1lLnJlcGxhY2UoL1teYS16QS1aXS9nLCAnJykgKyB0aGlzLiRzdG9yZS5zdGF0ZS5jdXJyZW50QWRtaW4uaWQgKyBuZXcgRGF0ZSgpLmdldFRpbWUoKSArIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwMDApICsgc3VmZml4OwogICAgICB2YXIgc3RvcmVUeXBlID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oImRlZmF1bHRTdG9yZVR5cGUiKTsKICAgICAgdmFyIGZkID0gbmV3IEZvcm1EYXRhKCk7CiAgICAgIGZkLmFwcGVuZCgiZmlsZSIsIGZpbGUpOwogICAgICBmZC5hcHBlbmQoIm9yaWdpbmFsTmFtZSIsIGZpbGUubmFtZSk7CiAgICAgIGZkLmFwcGVuZCgia2V5Iiwga2V5KTsKICAgICAgZmQuYXBwZW5kKCJyZWxhdGl2ZVBhdGgiLCBrZXkpOwogICAgICBmZC5hcHBlbmQoInR5cGUiLCAiYXJ0aWNsZVBpY3R1cmUiKTsKICAgICAgZmQuYXBwZW5kKCJzdG9yZVR5cGUiLCBzdG9yZVR5cGUpOwoKICAgICAgaWYgKHN0b3JlVHlwZSA9PT0gImxvY2FsIikgewogICAgICAgIHRoaXMuc2F2ZUxvY2FsKHBvcywgZmQpOwogICAgICB9IGVsc2UgaWYgKHN0b3JlVHlwZSA9PT0gInFpbml1IikgewogICAgICAgIHRoaXMuc2F2ZVFpbml1KHBvcywgZmQpOwogICAgICB9CiAgICB9LAogICAgc2F2ZUxvY2FsOiBmdW5jdGlvbiBzYXZlTG9jYWwocG9zLCBmZCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy4kaHR0cC51cGxvYWQoImh0dHA6Ly80Ny45Ni44Ni4yMjM6ODA4MS9hcGkiICsgIi9yZXNvdXJjZS91cGxvYWQiLCBmZCwgdHJ1ZSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgaWYgKCFfdGhpcy4kY29tbW9uLmlzRW1wdHkocmVzLmRhdGEpKSB7CiAgICAgICAgICB2YXIgdXJsID0gcmVzLmRhdGE7CgogICAgICAgICAgX3RoaXMuJHJlZnMubWQuJGltZzJVcmwocG9zLCB1cmwpOwogICAgICAgIH0KICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgX3RoaXMuJG1lc3NhZ2UoewogICAgICAgICAgbWVzc2FnZTogZXJyb3IubWVzc2FnZSwKICAgICAgICAgIHR5cGU6ICJlcnJvciIKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgc2F2ZVFpbml1OiBmdW5jdGlvbiBzYXZlUWluaXUocG9zLCBmZCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHRoaXMuJGh0dHAuZ2V0KCJodHRwOi8vNDcuOTYuODYuMjIzOjgwODEvYXBpIiArICIvcWluaXUvZ2V0VXBUb2tlbiIsIHsKICAgICAgICBrZXk6IGZkLmdldCgia2V5IikKICAgICAgfSwgdHJ1ZSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgaWYgKCFfdGhpczIuJGNvbW1vbi5pc0VtcHR5KHJlcy5kYXRhKSkgewogICAgICAgICAgZmQuYXBwZW5kKCJ0b2tlbiIsIHJlcy5kYXRhKTsKCiAgICAgICAgICBfdGhpczIuJGh0dHAudXBsb2FkUWluaXUoX3RoaXMyLiRzdG9yZS5zdGF0ZS5zeXNDb25maWcucWluaXVVcmwsIGZkKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgaWYgKCFfdGhpczIuJGNvbW1vbi5pc0VtcHR5KHJlcy5rZXkpKSB7CiAgICAgICAgICAgICAgdmFyIHVybCA9IF90aGlzMi4kc3RvcmUuc3RhdGUuc3lzQ29uZmlnWydxaW5pdS5kb3dubG9hZFVybCddICsgcmVzLmtleTsKICAgICAgICAgICAgICB2YXIgZmlsZSA9IGZkLmdldCgiZmlsZSIpOwoKICAgICAgICAgICAgICBfdGhpczIuJGNvbW1vbi5zYXZlUmVzb3VyY2UoX3RoaXMyLCAiYXJ0aWNsZVBpY3R1cmUiLCB1cmwsIGZpbGUuc2l6ZSwgZmlsZS50eXBlLCBmaWxlLm5hbWUsICJxaW5pdSIsIHRydWUpOwoKICAgICAgICAgICAgICBfdGhpczIuJHJlZnMubWQuJGltZzJVcmwocG9zLCB1cmwpOwogICAgICAgICAgICB9CiAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgICAgX3RoaXMyLiRtZXNzYWdlKHsKICAgICAgICAgICAgICBtZXNzYWdlOiBlcnJvci5tZXNzYWdlLAogICAgICAgICAgICAgIHR5cGU6ICJlcnJvciIKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIF90aGlzMi4kbWVzc2FnZSh7CiAgICAgICAgICBtZXNzYWdlOiBlcnJvci5tZXNzYWdlLAogICAgICAgICAgdHlwZTogImVycm9yIgogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICBhZGRBcnRpY2xlQ292ZXI6IGZ1bmN0aW9uIGFkZEFydGljbGVDb3ZlcihyZXMpIHsKICAgICAgdGhpcy5hcnRpY2xlLmFydGljbGVDb3ZlciA9IHJlczsKICAgIH0sCiAgICBnZXRTb3J0QW5kTGFiZWw6IGZ1bmN0aW9uIGdldFNvcnRBbmRMYWJlbCgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB0aGlzLiRodHRwLmdldCgiaHR0cDovLzQ3Ljk2Ljg2LjIyMzo4MDgxL2FwaSIgKyAiL3dlYkluZm8vbGlzdFNvcnRBbmRMYWJlbCIpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIGlmICghX3RoaXMzLiRjb21tb24uaXNFbXB0eShyZXMuZGF0YSkpIHsKICAgICAgICAgIF90aGlzMy5zb3J0cyA9IHJlcy5kYXRhLnNvcnRzOwogICAgICAgICAgX3RoaXMzLmxhYmVscyA9IHJlcy5kYXRhLmxhYmVsczsKCiAgICAgICAgICBpZiAoIV90aGlzMy4kY29tbW9uLmlzRW1wdHkoX3RoaXMzLmlkKSkgewogICAgICAgICAgICBfdGhpczMuZ2V0QXJ0aWNsZSgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgX3RoaXMzLiRtZXNzYWdlKHsKICAgICAgICAgIG1lc3NhZ2U6IGVycm9yLm1lc3NhZ2UsCiAgICAgICAgICB0eXBlOiAiZXJyb3IiCiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIGdldEFydGljbGU6IGZ1bmN0aW9uIGdldEFydGljbGUoKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgdGhpcy4kaHR0cC5nZXQoImh0dHA6Ly80Ny45Ni44Ni4yMjM6ODA4MS9hcGkiICsgIi9hZG1pbi9hcnRpY2xlL2dldEFydGljbGVCeUlkIiwgewogICAgICAgIGlkOiB0aGlzLmlkCiAgICAgIH0sIHRydWUpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIGlmICghX3RoaXM0LiRjb21tb24uaXNFbXB0eShyZXMuZGF0YSkpIHsKICAgICAgICAgIF90aGlzNC5hcnRpY2xlID0gcmVzLmRhdGE7CiAgICAgICAgfQogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBfdGhpczQuJG1lc3NhZ2UoewogICAgICAgICAgbWVzc2FnZTogZXJyb3IubWVzc2FnZSwKICAgICAgICAgIHR5cGU6ICJlcnJvciIKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgc3VibWl0Rm9ybTogZnVuY3Rpb24gc3VibWl0Rm9ybShmb3JtTmFtZSkgewogICAgICB2YXIgX3RoaXM1ID0gdGhpczsKCiAgICAgIGlmICh0aGlzLmFydGljbGUudmlld1N0YXR1cyA9PT0gZmFsc2UgJiYgdGhpcy4kY29tbW9uLmlzRW1wdHkodGhpcy5hcnRpY2xlLnBhc3N3b3JkKSkgewogICAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgICAgbWVzc2FnZTogIuaWh+eroOS4jeWPr+ingeaXtuW/hemhu+i+k+WFpeWvhuegge+8gSIsCiAgICAgICAgICB0eXBlOiAiZXJyb3IiCiAgICAgICAgfSk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB0aGlzLiRyZWZzW2Zvcm1OYW1lXS52YWxpZGF0ZShmdW5jdGlvbiAodmFsaWQpIHsKICAgICAgICBpZiAodmFsaWQpIHsKICAgICAgICAgIGlmIChfdGhpczUuJGNvbW1vbi5pc0VtcHR5KF90aGlzNS5pZCkpIHsKICAgICAgICAgICAgX3RoaXM1LnNhdmVBcnRpY2xlKF90aGlzNS5hcnRpY2xlLCAiL2FydGljbGUvc2F2ZUFydGljbGUiKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIF90aGlzNS5hcnRpY2xlLmlkID0gX3RoaXM1LmlkOwoKICAgICAgICAgICAgX3RoaXM1LnNhdmVBcnRpY2xlKF90aGlzNS5hcnRpY2xlLCAiL2FydGljbGUvdXBkYXRlQXJ0aWNsZSIpOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBfdGhpczUuJG1lc3NhZ2UoewogICAgICAgICAgICBtZXNzYWdlOiAi6K+35a6M5ZaE5b+F5aGr6aG577yBIiwKICAgICAgICAgICAgdHlwZTogImVycm9yIgogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICByZXNldEZvcm06IGZ1bmN0aW9uIHJlc2V0Rm9ybShmb3JtTmFtZSkgewogICAgICB0aGlzLiRyZWZzW2Zvcm1OYW1lXS5yZXNldEZpZWxkcygpOwoKICAgICAgaWYgKCF0aGlzLiRjb21tb24uaXNFbXB0eSh0aGlzLmlkKSkgewogICAgICAgIHRoaXMuZ2V0QXJ0aWNsZSgpOwogICAgICB9CiAgICB9LAogICAgc2F2ZUFydGljbGU6IGZ1bmN0aW9uIHNhdmVBcnRpY2xlKHZhbHVlLCB1cmwpIHsKICAgICAgdmFyIF90aGlzNiA9IHRoaXM7CgogICAgICB0aGlzLiRjb25maXJtKCfnoa7orqTkv53lrZjvvJ8nLCAn5o+Q56S6JywgewogICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAn56Gu5a6aJywKICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAn5Y+W5raIJywKICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAgICAgY2VudGVyOiB0cnVlCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzNi4kaHR0cC5wb3N0KCJodHRwOi8vNDcuOTYuODYuMjIzOjgwODEvYXBpIiArIHVybCwgdmFsdWUsIHRydWUpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgX3RoaXM2LiRtZXNzYWdlKHsKICAgICAgICAgICAgbWVzc2FnZTogIuS/neWtmOaIkOWKn++8gSIsCiAgICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIgogICAgICAgICAgfSk7CgogICAgICAgICAgX3RoaXM2LiRyb3V0ZXIucHVzaCh7CiAgICAgICAgICAgIHBhdGg6ICcvcG9zdExpc3QnCiAgICAgICAgICB9KTsKICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgIF90aGlzNi4kbWVzc2FnZSh7CiAgICAgICAgICAgIG1lc3NhZ2U6IGVycm9yLm1lc3NhZ2UsCiAgICAgICAgICAgIHR5cGU6ICJlcnJvciIKICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXM2LiRtZXNzYWdlKHsKICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJywKICAgICAgICAgIG1lc3NhZ2U6ICflt7Llj5bmtojkv53lrZghJwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0KICB9Cn07"},null]}