{"remainingRequest":"D:\\code\\willFire\\vue\\node_modules\\thread-loader\\dist\\cjs.js!D:\\code\\willFire\\vue\\node_modules\\babel-loader\\lib\\index.js!D:\\code\\willFire\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\code\\willFire\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\willFire\\vue\\src\\components\\home.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\willFire\\vue\\src\\components\\home.vue","mtime":1723977763573},{"path":"D:\\code\\willFire\\vue\\babel.config.js","mtime":1720174139000},{"path":"D:\\code\\willFire\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1723800259159},{"path":"D:\\code\\willFire\\vue\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1723800259150},{"path":"D:\\code\\willFire\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1723800259743},{"path":"D:\\code\\willFire\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1723800259159},{"path":"D:\\code\\willFire\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1723800259896}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}